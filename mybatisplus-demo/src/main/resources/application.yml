server:
  port: 8088
spring:
  main:
    allow-bean-definition-overriding: true
  datasource:
    #druid 数据源专有配置
    #连接池配置
    druid:
      username: root
      password: root
      url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8&usessl=false
      driver-class-name: com.mysql.cj.jdbc.Driver
      # 配置测试查询语句
      validationQuery: SELECT 1 FROM DUAL
      # 初始化大小，最小，最大
      initialSize: 5
      min-idle: 5
      max-active: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall
      # StatViewServlet配置。（因为暴露的监控信息比较敏感，支持密码加密和访问ip限定）
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: admin
        login-password: admin
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  #shardingsphere相关配置
  shardingsphere:
    datasource:
      names: ds   #配置库的名字，随意
      ds: #配置目前m1库的数据源信息
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/test?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false
        username: root
        password: root
    sharding:
      tables:
        user: # 指定t_order表的数据分布情况，配置数据节点
          actualDataNodes: ds.user_$->{0..4}
          tableStrategy:
            inline: # 指定t_order表的分片策略，分片策略包括分片键和分片算法
              shardingColumn: id
              algorithmExpression: user_$->{id % 5}
        keyGenerator:
          type: SNOWFLAKE  #主键生成策略为SNOWFLAKE
          column: id  #指定主键
    props:
      sql:
        show: true
mybatis-plus:
  mapper-locations: classpath:/mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  redis:
    #Redis数据库索引（默认为0）
    database: 0
    #Redis服务器地址
    host: 127.0.0.1
    #Redis服务器连接端口
    port: 6379
    #连接超时时间（毫秒）
    timeout: 3000ms
    lettuce:
      pool:
        #连接池最大连接数（使用负值表示没有限制）
        max-active: 20
        #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 3000ms
        #连接池中的最大空闲连接（负数没有限制）
        max-idle: 8
        #连接池中的最小空闲连接
        min-idle: 0
